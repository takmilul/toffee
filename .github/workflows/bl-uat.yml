name: BL-UAT CI

on:
  push:
    branches: [ "bl-uat" ]
  pull_request:
    branches: [ "bl-uat" ]
  workflow_dispatch:

jobs:
  
#  Lint-Check:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4.1.2

##      - name: set up node.js 20
##        uses: actions/setup-node@v4.0.2
##        with:
##          node-version: '20'

#      - name: Run Lint
#        run: echo "Lint"

##      - name: set up JDK 17
##        uses: actions/setup-java@v4.2.1
##        with:
##          java-version: '17'
##          distribution: 'temurin'
##          cache: gradle

##      - name: Lint with Gradle
##        run: ./gradlew lintDebug

##      - name: Upload html test report
##        uses: actions/upload-artifact@v4.3.1
##        with:
##          name: lint.html
##          path: app/build/reports/lint-results-debug.html

#  Unit-Testing:
#    needs: [ Lint-Check ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4.1.2

##      - name: set up node.js 20
##        uses: actions/setup-node@v4.0.2
##        with:
##          node-version: '20'

#      - name: Run Unit Tests
#        run: echo "Unit Tests"

##      - name: set up JDK 17
##        uses: actions/setup-java@v4.2.1
##        with:
##          java-version: '17'
##          distribution: 'temurin'
##          cache: gradle

##      - name: Run tests
##        run: ./gradlew test

##      - name: Upload test report
##        uses: actions/upload-artifact@v4.3.1
##        with:
##          name: unit_test_report
##          path: app/build/reports/tests/testDebugUnitTest/

#  Instrumentation-Testing:
#    needs: [ Unit-Testing ]
#    runs-on: macos-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4.1.2

##      - name: set up node.js 20
##        uses: actions/setup-node@v4.0.2
##        with:
##          node-version: '20'

#      - name: Run Instrumentation Tests
#        run: echo "Instrumentation Tests"

##      - name: set up JDK 17
##        uses: actions/setup-java@v4.2.1
##        with:
##          java-version: '17'
##          distribution: 'temurin'
##          cache: gradle

##      - name: Run espresso tests
##        uses: reactivecircus/android-emulator-runner@v2
##        with:
##          api-level: 34
##          script: ./gradlew connectedCheck

##      - name: Upload test report
##        uses: actions/upload-artifact@v4.3.1
##        with:
##          name: instrumentation_test_report
##          path: app/build/reports/androidTests/connected/

#  Static-Code-Analysis:
#    needs: [ Instrumentation-Testing ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4.1.2

##      - name: set up node.js 20
##        uses: actions/setup-node@v4.0.2
##        with:
##          node-version: '20'

#      - name: Run static code analysis
#        run: echo "Static Code Analysis"

##      - name: set up JDK 17
##        uses: actions/setup-java@v4.2.1
##        with:
##          java-version: '17'
##          distribution: 'temurin'
##          cache: gradle

##      - name: SonarCloud Scan
##        run: ./gradlew app:sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}
##        env:
##          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  Build-And-Deploy-App:
#    needs: [ Static-Code-Analysis ]
    runs-on: ubuntu-latest
    
    steps:
      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10
      
      - name: Checkout the code
        uses: actions/checkout@v4.1.2
      
      - name: Setup Cache
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
      
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3.1.0
        with:
          gradle-version: '8.4'
      
      - name: Setup JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      
      - name: Setup node.js 20
        uses: actions/setup-node@v4.0.2
        with:
          node-version: '20'
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Build Release App
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          ALIAS: ${{ secrets.ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
        run: |
          ./gradlew assembleMobileStagingRelease
          ls -al app/build/outputs/apk/mobile/stagingRelease
          mv app/build/outputs/apk/mobile/stagingRelease/app-mobile-stagingRelease-unsigned.apk app/build/outputs/apk/mobile/stagingRelease/app-stagingRelease.apk
        
#      - name: List files in the repository
#        run: |
#          ls ${{ github.workspace }}
      
      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/mobile/stagingRelease
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"
      
      - name: Remove Un-necessary APK's
        run: |
          rm app/build/outputs/apk/mobile/stagingRelease/app-stagingRelease.apk
          rm app/build/outputs/apk/mobile/stagingRelease/app-stagingRelease-aligned.apk
      
#      - name: Artifact Upload
#        uses: actions/upload-artifact@v4.3.1
#        with:
#          name: Bl-Uat-signed-app
#          path: app/build/outputs/apk/blUat/release/*
#          if-no-files-found: warn
      
#      - name: Upload APK to Firebase App Distribution
#        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
#        with:
#          appId: ${{ secrets.FIREBASE_APP_ID }}
#          serviceCredentialsFileContent: ${{ secrets.SERVICE_ACCOUNT_KEY }}
#          groups: "Testers"
#          releaseNotesFile: "distribution/whatsnew/whatsnew-en-US"
#          file: ${{ steps.sign_app.outputs.signedReleaseFile }}
      
      - name: Upload APK to Firebase App Distribution
        run: ./gradlew appDistributionUploadMobileStagingRelease
          --groups="BL-UAT"
          --artifactPath="app/build/outputs/apk/mobile/stagingRelease/app-stagingRelease-signed.apk"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}